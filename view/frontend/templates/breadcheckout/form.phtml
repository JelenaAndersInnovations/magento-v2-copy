<?php /* @var $this Bread\BreadCheckout\Block\Payment\Form */ ?>

<ul class="form-list" id="payment_form_<?php echo $this->getMethodCode(); ?>" style="display:none">
    <div id='bread-checkout-btn' title="Bread Checkout" class="button" <?php echo $this->getIsDefaultSize(); ?> >
        <span>
            <span><?php echo __('Bread Checkout'); ?></span>
        </span>
    </div>
    <input id="bread_transaction_id" name="bread_transaction_id" type="hidden" value="<?php echo $this->getBreadTransactionId(); ?>" class="validate-bread"/>
</ul>

<?php echo $this->getBeforeHtml(); ?>
<script type="text/javascript">

    Validation.add('validate-bread','<?php echo $this->escapeHtml($this->getIncompleteCheckoutMessage()); ?>',function(v){
        return !Validation.get('IsEmpty').test(v);
    });

    document.configureButton = function() {
        var breadConfig = {
            buttonId:           'bread-checkout-btn',
            items:              <?php echo $this->getItemsData(); ?>,
            discounts:          <?php echo $this->getDiscountDataJson();?>,
            shippingOptions:    <?php echo $this->getShippingOptions(); ?>,
            customTotal:        <?php echo $this->getGrandTotal(); ?>,
            actAsLabel:         false,
            asLowAs:            <?php echo $this->getAsLowAs(); ?>,
            shippingContact:    <?php echo $this->getShippingAddressData(); ?>,
            billingContact:     <?php echo $this->getBillingAddressData(); ?>,
            done:               function (err, tx_token) {
                                    console.log(err);
                                    console.log(tx_token);
                                    if (tx_token !== undefined) {
                                        new Ajax.Request('<?php echo $this->getPaymentUrl() ?>', {
                                            parameters:     {token: tx_token},
                                            onSuccess:      function (transport) {
                                                console.log('success');
                                                try {
                                                    if (transport.responseText.isJSON()) {
                                                        var response = transport.responseText.evalJSON()
                                                        if (response.error) {
                                                            alert(response.message);
                                                        } else {
                                                            $('bread_transaction_id').value = tx_token;
                                                            var approved = "<span><strong>You have been approved for financing.<br/>"+
                                                                "Please continue with the checkout to complete your order.</strong></span>";
                                                            $('payment_form_breadcheckout').insert(approved);
                                                        }
                                                    }

                                                catch (e) {
                                                    console.log(e);
                                                }
                                            }
                                        });
                                    }
                                    return;
                                }
        };

        var taxValue = parseInt(<?php echo $this->getTaxValue(); ?>);
        if (taxValue >= 0) {
            breadConfig.tax = taxValue;
        }

        <?php $buttonDesign     = $this->getButtonDesign();
            if(!empty($buttonDesign)): ?>
            breadConfig.customCSS = '<?php echo $buttonDesign; ?> .bread-amt, .bread-dur { display:none; } .bread-text::after{ content: "Finance Application"; }';
        <?php endif; ?>

        bread.checkout(breadConfig);
    };

    if (typeof bread != 'undefined'){
        document.configureButton();
    }

    document.observe("dom:loaded", function() {
        payment.addAfterInitFunction('breadconfig', function(){
            document.configureButton();
        });
    });
</script>