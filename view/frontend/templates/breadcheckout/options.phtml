<?php
/**
 * 
 * @author  Bread   @copyright  2016
 * @author  Joel    @Mediotype
 * @author  Miranda @Mediotype
 */

/** @var $this Bread\BreadCheckout\Block\Product\View */
?>
<script type="text/javascript">
    <?php $_options = $this->decorateArray($this->getProduct()->getOptions()); ?>
    <?php if (count($_options)): ?>

    require(['jquery', 'jquery/validate'], function($) {
        /**
         * Validate the add to cart form when inputs are updated
         */
        $('#product_addtocart_form').on('change', function() {
            $(this).validate({
                errorPlacement: function() {} // Hides default error labels
            });

            if ($(this).valid()) {
                document.customOptions = document.getSkuForOptions();
                $('.button-prevent').hide();
                if (document.customOptions !== '') {
                    document.resetPriceAndSku(true);
                }
            } else {
                $('.button-prevent').show();
            }
        });

        /**
         * Retrieve custom options data
         */
        <?php foreach($_options as $_option): ?>
            <?php echo $this->getOptionHtml($_option); ?>
        <?php endforeach; ?>
        document.optionsData = <?php echo $this->getCustomOptionsData($_options); ?>

        /**
         * Returns SKU with custom options appended;
         * has side effect of updating the product price
         */
        document.getSkuForOptions = function() {
            var skuSuffix = '';
            var skipIds = [];
            var price = parseInt(document.basePrice);
            
            $('.product-custom-option').each(function() {
                var optionId = $(this).attr('name').match(/\[(\d+)\]/)[1];

                if (document.optionsData[optionId]) {
                    var configOptions = document.optionsData[optionId];
                    var val = '';

                    var elType = $(this).attr('type');
                    if (typeof elType == 'undefined') {
                        elType = $(this).prop('tagName').toLowerCase();
                    }

                    switch (elType) {
                        case 'checkbox':
                        case 'radio':
                            if ($(this).is(':checked')) {
                                val = $(this).val();

                                if (val) {
                                    skuSuffix += '***' + configOptions[val].sku;
                                    price += parseInt(configOptions[val].price);
                                }
                            }
                            break;
                        case 'select':
                            var dateSelected = false;

                            if ($(this).hasClass('datetime-picker')) {
                                dateSelected = true;
                                var role = $(this).data('calendar-role');
                            }

                            $(this).children().each(function() {
                                if ($(this).is(':selected') && $(this).val()) {
                                    val = $(this).val();

                                    if (val && dateSelected) {
                                        skuSuffix += '***' + optionId + '***' + role + '===' + val;
                                        price += parseInt(configOptions.price)
                                    } else if (val) {
                                        skuSuffix += '***' + configOptions[val].sku;
                                        price += parseInt(configOptions[val].price);
                                    }
                                }
                            });
                            break;
                        default:
                            val = $(this).val();

                            if (val) {
                                skuSuffix += '***' + optionId + '===' + val;
                                price += parseInt(configOptions[val].price);
                            }
                    }
                }
            });

            document.priceWithOptions = price;
            return skuSuffix;
        };

        $(document).ready(function() {
            document.basePrice = document.previousPrice;
            document.customOptions = document.getSkuForOptions();
        });
    });
    <?php endif; ?>
</script>